//
//  DeviceControlBusiness.m
//  openSDK
//
//  Created by mr.cao on 15/8/13.
//  Copyright (c) 2015年 peng. All rights reserved.
//

#import "HETDeviceControlBusiness.h"
#import "HETNetWorkRequest.h"
#import "HETURLRequestHelper.h"
#import "HETAuthorize.h"

#define kHETAPIBaseUrl @"https://200.200.200.50/v1/app/open"//@"https://test.open.api.clife.cn/v1"
#define kHETUploadAPIBaseUrl @"https://200.200.200.50/v1/app/open"
@implementation HETDeviceControlBusiness
- (void)deviceControlWithJSON:(NSString *)json
                 withDeviceID:(NSString *)deviceID
             success:(successBlock)success
                      failure:(failureBlock)failure
{
    if ([self.appKey length] == 0)
    {
        NSString *reason = [NSString stringWithFormat:@"appKey为空，请检查key是否正确设置。"];
        
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"提示" message:reason delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil, nil];
        
        [alert show];
        return;
    }


    NSString *timezone=[HETURLRequestHelper currentTimeOffset] ;
    //获取时间戳
    NSTimeInterval time = [[NSDate date] timeIntervalSince1970];
    NSString *_timestamp = [NSString stringWithFormat: @"%lld", (long long)(time * 1000)];
    
    NSDictionary *params=[NSDictionary dictionaryWithObjectsAndKeys:self.appKey,@"appId",_timestamp,@"timestamp",timezone,@"timeZone",deviceID,@"deviceId",json,@"json", nil];
    
    NSString * fullURL = [kHETAPIBaseUrl stringByAppendingString:@"/device/config/set"];
    [[HETNetWorkRequest shared]startRequestWithHTTPMethod:HETRequestMethodPost withRequestUrl:fullURL processParams:params needSign:YES BlockWithSuccess:^(HETNetWorkRequestOperation *operation, id responseObject) {
        if([responseObject isKindOfClass:[NSDictionary class]])
        {
            NSString *code=[responseObject objectForKey:@"code"];
            if(code.intValue==0)
            {
                success(responseObject);
            }
            else
            {
               // NSLog(@"%@",[responseObject objectForKey:@"msg"]);
                failure([NSError errorWithDomain:@"deviceControl" code:1000 userInfo:responseObject]);
                
                
            }
            
        }
        else
        {
           // NSLog(@"%@",[responseObject objectForKey:@"msg"]);
            failure([NSError errorWithDomain:@"deviceControl" code:1000 userInfo:responseObject]);
        }
        
        
    } failure:^(HETNetWorkRequestOperation *operation, NSError *error) {
        failure(error);
        
    }];

    /*[[HETNetWorkRequest shared]postToPath:@"/device/config/set" params:params needSign:YES BlockWithSuccess:^(HETNetWorkRequestOperation *operation, id responseObject) {
        if([responseObject isKindOfClass:[NSDictionary class]])
        {
            NSString *code=[responseObject objectForKey:@"code"];
            if(code.intValue==0)
            {
                success(nil);
            }
            else
            {
                NSLog(@"%@",[responseObject objectForKey:@"msg"]);
                failure([NSError errorWithDomain:@"deviceControl" code:1000 userInfo:responseObject]);

                
            }
            
        }
        else
        {
            NSLog(@"%@",[responseObject objectForKey:@"msg"]);
            failure([NSError errorWithDomain:@"deviceControl" code:1000 userInfo:responseObject]);
        }
        
        
    } failure:^(HETNetWorkRequestOperation *operation, NSError *error) {
   
        failure(error);
        
    }];*/

}
- (void)fetchDeviceConfigDataWithDeviceID:(NSString *)deviceID
                              success:(successBlock)success
                              failure:(failureBlock)failure
{
    if ([self.appKey length] == 0)
    {
        NSString *reason = [NSString stringWithFormat:@"appKey为空，请检查key是否正确设置。"];
        
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"提示" message:reason delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil, nil];
        
        [alert show];
        return;
    }
    NSString *timezone=[HETURLRequestHelper currentTimeOffset] ;
    //获取时间戳
    NSTimeInterval time = [[NSDate date] timeIntervalSince1970];
    NSString *_timestamp = [NSString stringWithFormat: @"%lld", (long long)(time * 1000)];
    
    NSDictionary *params=[NSDictionary dictionaryWithObjectsAndKeys:self.appKey,@"appId",_timestamp,@"timestamp",timezone,@"timeZone",deviceID,@"deviceId", nil];
    
    
    NSString * fullURL = [kHETAPIBaseUrl stringByAppendingString:@"/device/config/get"];
    [[HETNetWorkRequest shared]startRequestWithHTTPMethod:HETRequestMethodGet withRequestUrl:fullURL processParams:params needSign:NO BlockWithSuccess:^(HETNetWorkRequestOperation *operation, id responseObject) {
        if([responseObject isKindOfClass:[NSDictionary class]])
        {
            NSString *code=[responseObject objectForKey:@"code"];
            if(code.intValue==0)
            {
                success(responseObject);
            }
            else
            {
                //NSLog(@"%@",[responseObject objectForKey:@"msg"]);
                failure([NSError errorWithDomain:@"deviceControl" code:1001 userInfo:responseObject]);
                
                
            }
            
        }
        else
        {
            //NSLog(@"%@",[responseObject objectForKey:@"msg"]);
            failure([NSError errorWithDomain:@"deviceControl" code:1001 userInfo:responseObject]);
        }
        
    } failure:^(HETNetWorkRequestOperation *operation, NSError *error) {
        failure(error);
        
    }];
    /*[[HETNetWorkRequest shared]getFromPath:@"/device/config/get" params:params needSign:NO BlockWithSuccess:^(HETNetWorkRequestOperation *operation, id responseObject) {
        if([responseObject isKindOfClass:[NSDictionary class]])
        {
            NSString *code=[responseObject objectForKey:@"code"];
            if(code.intValue==0)
            {
                success(responseObject);
            }
            else
            {
                NSLog(@"%@",[responseObject objectForKey:@"msg"]);
                failure([NSError errorWithDomain:@"deviceControl" code:1000 userInfo:responseObject]);
                
                
            }
            
        }
        else
        {
            NSLog(@"%@",[responseObject objectForKey:@"msg"]);
            failure([NSError errorWithDomain:@"deviceControl" code:1000 userInfo:responseObject]);
        }
        
        
    } failure:^(HETNetWorkRequestOperation *operation, NSError *error) {
        
        failure(error);
        
    }];*/
}
- (void)fetchDeviceRunDataWithDeviceID:(NSString *)deviceID
                               success:(successBlock)success
                               failure:(failureBlock)failure
{
    if ([self.appKey length] == 0)
    {
        NSString *reason = [NSString stringWithFormat:@"appKey为空，请检查key是否正确设置。"];
        
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"提示" message:reason delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil, nil];
        
        [alert show];
        return;
    }
    NSString *timezone=[HETURLRequestHelper currentTimeOffset] ;
    //获取时间戳
    NSTimeInterval time = [[NSDate date] timeIntervalSince1970];
    NSString *_timestamp = [NSString stringWithFormat: @"%lld", (long long)(time * 1000)];
    
    NSDictionary *params=[NSDictionary dictionaryWithObjectsAndKeys:self.appKey,@"appId",_timestamp,@"timestamp",timezone,@"timeZone",deviceID,@"deviceId", nil];
    
    
    NSString * fullURL = [kHETAPIBaseUrl stringByAppendingString:@"/device/data/get"];
    [[HETNetWorkRequest shared]startRequestWithHTTPMethod:HETRequestMethodGet withRequestUrl:fullURL processParams:params needSign:NO BlockWithSuccess:^(HETNetWorkRequestOperation *operation, id responseObject) {
        if([responseObject isKindOfClass:[NSDictionary class]])
        {
            NSString *code=[responseObject objectForKey:@"code"];
            if(code.intValue==0)
            {
                success(responseObject);
            }
            else
            {
                //NSLog(@"%@",[responseObject objectForKey:@"msg"]);
                failure([NSError errorWithDomain:@"deviceControl" code:1002 userInfo:responseObject]);
                
                
            }
            
        }
        else
        {
            //NSLog(@"%@",[responseObject objectForKey:@"msg"]);
            failure([NSError errorWithDomain:@"deviceControl" code:1002 userInfo:responseObject]);
        }
        
    } failure:^(HETNetWorkRequestOperation *operation, NSError *error) {
        failure(error);
        
    }];
 
}
- (void)fetchAllBindDeviceSuccess:(successBlock)success
                          failure:(failureBlock)failure
{
    if ([self.appKey length] == 0)
    {
        NSString *reason = [NSString stringWithFormat:@"appKey为空，请检查key是否正确设置。"];
        
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"提示" message:reason delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil, nil];
        
        [alert show];
        return;
    }
    
    //获取时间戳
    NSTimeInterval time = [[NSDate date] timeIntervalSince1970];
    NSString *_timestamp = [NSString stringWithFormat: @"%lld", (long long)(time * 1000)];
    
    NSDictionary *params=[NSDictionary dictionaryWithObjectsAndKeys:self.appKey,@"appId",_timestamp,@"timestamp", nil];
    NSString * fullURL = [kHETAPIBaseUrl stringByAppendingString:@"/device/getBind"];
    [[HETNetWorkRequest shared]startRequestWithHTTPMethod:HETRequestMethodGet withRequestUrl:fullURL processParams:params needSign:NO BlockWithSuccess:^(HETNetWorkRequestOperation *operation, id responseObject) {
        if([responseObject isKindOfClass:[NSDictionary class]])
        {
            NSString *code=[responseObject objectForKey:@"code"];
            if(code.intValue==0)
            {
                success(responseObject);
            }
            else
            {
                //NSLog(@"%@",[responseObject objectForKey:@"msg"]);
                failure([NSError errorWithDomain:@"deviceControl" code:1003 userInfo:responseObject]);
                
                
            }
            
        }
        else
        {
            NSLog(@"%@",[responseObject objectForKey:@"msg"]);
            failure([NSError errorWithDomain:@"deviceControl" code:1003 userInfo:responseObject]);
        }
        
        
    } failure:^(HETNetWorkRequestOperation *operation, NSError *error) {
        failure(error);
           }];
    

 
}
- (void)unbindDeviceWithDeviceID:(NSString *)deviceID
                         success:(successBlock)success
                         failure:(failureBlock)failure
{
    if ([self.appKey length] == 0)
    {
        NSString *reason = [NSString stringWithFormat:@"appKey为空，请检查key是否正确设置。"];
        
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"提示" message:reason delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil, nil];
        
        [alert show];
        return;
    }
    NSString *timezone=[HETURLRequestHelper currentTimeOffset] ;
    //获取时间戳
    NSTimeInterval time = [[NSDate date] timeIntervalSince1970];
    NSString *_timestamp = [NSString stringWithFormat: @"%lld", (long long)(time * 1000)];
    
    NSDictionary *params=[NSDictionary dictionaryWithObjectsAndKeys:self.appKey,@"appId",_timestamp,@"timestamp",timezone,@"timeZone",deviceID,@"deviceId", nil];
    
    NSString * fullURL = [kHETAPIBaseUrl stringByAppendingString:@"/device/unbind"];
    [[HETNetWorkRequest shared]startRequestWithHTTPMethod:HETRequestMethodPost withRequestUrl:fullURL processParams:params needSign:YES BlockWithSuccess:^(HETNetWorkRequestOperation *operation, id responseObject) {
        if([responseObject isKindOfClass:[NSDictionary class]])
        {
            NSString *code=[responseObject objectForKey:@"code"];
            if(code.intValue==0)
            {
                 success(responseObject);
            }
            else
            {
                //NSLog(@"%@",[responseObject objectForKey:@"msg"]);
                failure([NSError errorWithDomain:@"deviceControl" code:1004 userInfo:responseObject]);
                
                
            }
            
        }
        else
        {
            //NSLog(@"%@",[responseObject objectForKey:@"msg"]);
            failure([NSError errorWithDomain:@"deviceControl" code:1004 userInfo:responseObject]);
        }
        
        
    } failure:^(HETNetWorkRequestOperation *operation, NSError *error) {
        failure(error);
        
    }];

    /*[[HETNetWorkRequest shared]postToPath:@"/device/unbind" params:params needSign:YES BlockWithSuccess:^(HETNetWorkRequestOperation *operation, id responseObject) {
        if([responseObject isKindOfClass:[NSDictionary class]])
        {
            NSString *code=[responseObject objectForKey:@"code"];
            if(code.intValue==0)
            {
                success(nil);
            }
            else
            {
                NSLog(@"%@",[responseObject objectForKey:@"msg"]);
                failure([NSError errorWithDomain:@"deviceControl" code:1000 userInfo:responseObject]);
                
                
            }
            
        }
        else
        {
            NSLog(@"%@",[responseObject objectForKey:@"msg"]);
            failure([NSError errorWithDomain:@"deviceControl" code:1000 userInfo:responseObject]);
        }
        
        
    } failure:^(HETNetWorkRequestOperation *operation, NSError *error) {
        
        failure(error);
        
    }];*/
 
}

/**
 *  设备运行数据上传（蓝牙）
 *
 *  @param deviceID  设备deviceID
 
 *  @param data      需要上传的数据
 *  @param success   上传成功的回调
 *  @param failure   上传失败的回调
 */



- (void)uploadBleDeviceWithDeviceID:(NSString *)deviceID
                               data:(NSData *)data
                            success:(successBlock)success
                            failure:(failureBlock)failure
{
    
}


/**
 *  设备数据上传（蓝牙）
 *
 *  @param deviceID 设备deviceID
 *  @param dataType 数据类型（1-历史数据，2-实时数据）
 *  @param data     需要上传的数据
 *  @param success  上传成功的回调
 *  @param failure  上传失败的回调
 */
- (void)uploadDeviceDataWithDeviceID:(NSString *)deviceID
                            dataType:(NSInteger) dataType
                                data:(NSData *)data
                             success:(successBlock)success
                             failure:(failureBlock)failure
{
    if ([self.appKey length] == 0)
    {
        NSString *reason = [NSString stringWithFormat:@"appKey为空，请检查key是否正确设置。"];
        
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"提示" message:reason delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil, nil];
        
        [alert show];
        return;
    }
    NSString *timezone=[HETURLRequestHelper currentTimeOffset] ;
    //获取时间戳
    NSTimeInterval time = [[NSDate date] timeIntervalSince1970];
    NSString *_timestamp = [NSString stringWithFormat: @"%lld", (long long)(time * 1000)];
    
    NSDictionary *params=[NSDictionary dictionaryWithObjectsAndKeys:self.appKey,@"appId",_timestamp,@"timestamp",timezone,@"timeZone",deviceID,@"deviceId",[NSString stringWithFormat:@"%d",dataType],@"dataType",data,@"data", nil];
    
    NSString * fullURL = [@"http://10.8.9.12/v1/app/open" stringByAppendingString:@"/device/data/upload"];
    
    //NSString * fullURL = [kHETAPIBaseUrl stringByAppendingString:@"/device/data/upload"];
    [[HETNetWorkRequest shared]startMultipartFormDataRequestWithRequestUrl:fullURL processParams:params BlockWithSuccess:^(HETNetWorkRequestOperation *operation, id responseObject) {
        if([responseObject isKindOfClass:[NSDictionary class]])
        {
            NSString *code=[responseObject objectForKey:@"code"];
            if(code.intValue==0)
            {
                 success(responseObject);
            }
            else
            {
                NSLog(@"%@",[responseObject objectForKey:@"msg"]);
                failure([NSError errorWithDomain:@"deviceControl" code:1004 userInfo:responseObject]);
                
                
            }
            
        }
        else
        {
            //NSLog(@"%@",[responseObject objectForKey:@"msg"]);
            failure([NSError errorWithDomain:@"deviceControl" code:1004 userInfo:responseObject]);
        }
 
    } failure:^(HETNetWorkRequestOperation *operation, NSError *error) {
        NSLog(@"error:%@",error);
        failure(error);

    }];

}

-(void)bindDeviceWithDeviceMAC:(NSString *)macAddr
                 deviceBrandId:(NSInteger) deviceBrandId
                  deviceTypeId:(NSInteger) deviceTypeId
               deviceSubtypeId:(NSInteger) deviceSubtypeId
                      bindType:(NSInteger)bindType
                       success:(successBlock)success
                       failure:(failureBlock)failure
{
    if ([self.appKey length] == 0)
    {
        NSString *reason = [NSString stringWithFormat:@"appKey为空，请检查key是否正确设置。"];
        
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"提示" message:reason delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil, nil];
        
        [alert show];
        return;
    }
    NSString *timezone=[HETURLRequestHelper currentTimeOffset] ;
    //获取时间戳
    NSTimeInterval time = [[NSDate date] timeIntervalSince1970];
    NSString *_timestamp = [NSString stringWithFormat: @"%lld", (long long)(time * 1000)];
    
    NSDictionary *params=[NSDictionary dictionaryWithObjectsAndKeys:self.appKey,@"appId",_timestamp,@"timestamp",timezone,@"timeZone",macAddr,@"mac",[NSString stringWithFormat:@"%d",deviceBrandId],@"deviceBrandId",[NSString stringWithFormat:@"%d",deviceTypeId],@"deviceTypeId",[NSString stringWithFormat:@"%d",deviceSubtypeId],@"deviceSubtypeId",[NSString stringWithFormat:@"%d",bindType],@"bindType", nil];
    
    NSString * fullURL = [kHETAPIBaseUrl stringByAppendingString:@"/v1/device/bind"];
    [[HETNetWorkRequest shared]startRequestWithHTTPMethod:HETRequestMethodPost withRequestUrl:fullURL processParams:params needSign:YES BlockWithSuccess:^(HETNetWorkRequestOperation *operation, id responseObject) {
        if([responseObject isKindOfClass:[NSDictionary class]])
        {
            NSString *code=[responseObject objectForKey:@"code"];
            if(code.intValue==0)
            {
                 success(responseObject);
            }
            else
            {
                NSLog(@"%@",[responseObject objectForKey:@"msg"]);
                failure([NSError errorWithDomain:@"deviceControl" code:1004 userInfo:responseObject]);
                
                
            }
            
        }
        else
        {
            //NSLog(@"%@",[responseObject objectForKey:@"msg"]);
            failure([NSError errorWithDomain:@"deviceControl" code:1004 userInfo:responseObject]);
        }
        
    } failure:^(HETNetWorkRequestOperation *operation, NSError *error) {
        failure(error);
        
    }];

}
@end
