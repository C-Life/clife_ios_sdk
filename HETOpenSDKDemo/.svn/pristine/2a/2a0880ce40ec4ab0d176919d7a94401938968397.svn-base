
* WIFI设备扫描，WiFi设备绑定，WiFi设备控制
****************************************************************************************
**************WIFI设备扫描，WiFi设备绑定（设备绑定）参考HETWIFIBindBusiness类*******************

/**
 *  扫描WIFI设备
 *
 *  @param ssid       WIFI 名称
 *  @param psw        WIFI 密码
 *  @param deviceType 设备类型，如果deviceType<1则扫描所有设备
 */
-(void)startScanDevicewithSSID:(NSString *)ssid withPassWord:(NSString *)psw withDeviceType:(DeviceType)deviceType;




/**
 *  绑定WIFI设备
 *
 *  @param deviceArrayObj 需要绑定的设备数组，数组里面必须是HETWIFICommonReform对象
 *  @param interval       设置绑定超时时间
 */
-(void)bindDevices:(NSArray<HETWIFICommonReform *>*)deviceObjArray withTimeOut:(NSTimeInterval)interval;


****扫描设备和绑定结果都是通过代理返回的：
/**
 *  绑定失败代理
 *
 *  @param obj  绑定失败的设备信息HETWIFICommonReform对象
 */
-(void)HETWIFIBindBusinessFail:(HETWIFICommonReform *)obj;

/**
 *  绑定成功代理
 *
 *  @param obj  绑定成功的设备信息HETWIFICommonReform对象
 */
-(void)HETWIFIBindBusinessSuccess:(HETWIFICommonReform *)obj;


/**
 *  扫描到设备代理
 *
 *  @param HETWIFIBindBusiness HETWIFIBindBusiness对象
 *  @param obj                 设备信息HETWIFICommonReform对象
 */
- (void)scanWIFIDevice:(id)HETWIFIBindBusiness BindDeviceInfo:(HETWIFICommonReform *)obj;


******************WIFI设备-香薰机设备控制***参考HETWIFIAromaDiffuserDevice类*****************
/**
 *
 *
 *  @param authUserId            设备控制的key
 *  @param deviceId              设备ID号
 *  @param deviceMac             设备mac地址
 *  @param deviceTypeId          设备主类型
 *  @param deviceSubtypeId       设备子类型
 *  @param runDataSuccessBlock   设备运行数据成功block回调
 *  @param runDataFailBlock      设备运行数据失败block回调
 *  @param cfgDataSuccessBlock   设备配置数据成功block回调
 *  @param cfgDataFailBlock      设备配置数据失败block回调
 */


- (instancetype)initWithUserId:(NSString *)authUserId
                      deviceId:(NSString *)deviceId
                     deviceMac:(NSString *)deviceMac
                  deviceTypeId:(NSString *)deviceTypeId
               deviceSubtypeId:(NSString *)deviceSubtypeId
          deviceRunDataSuccess:(void(^)(AromaDiffuserDeviceRunModel *model))runDataSuccessBlock
             deviceRunDataFail:(void(^)(NSError *error))runDataFailBlock
          deviceCfgDataSuccess:(void(^)(AromaDiffuserDeviceConfigModel *model))cfgDataSuccessBlock
             deviceCfgDataFail:(void(^)(NSError *error))cfgDataFailBlock;


/**
 *  设备控制
 *
 *  @param model   设备控制的HumidifierDeviceConfigModel模型
 *  @param successBlock 控制成功的回调
 *  @param failureBlock 控制失败的回调
 */
- (void)deviceControlRequestWithModel:(AromaDiffuserDeviceConfigModel *)model withSuccessBlock:(void(^)(id responseObject))successBlock withFailBlock:(void(^)( NSError *error))failureBlock;



******************************WIFI设备-加湿器设备控制***参考HETWIFIHumidifierDevice类********
/**
 *
 *
 *  @param authUserId            设备控制的key
 *  @param deviceId              设备ID号
 *  @param deviceMac             设备mac地址
 *  @param deviceTypeId          设备主类型
 *  @param deviceSubtypeId       设备子类型
 *  @param runDataSuccessBlock   设备运行数据成功block回调
 *  @param runDataFailBlock      设备运行数据失败block回调
 *  @param cfgDataSuccessBlock   设备配置数据成功block回调
 *  @param cfgDataFailBlock      设备配置数据失败block回调
 */


- (instancetype)initWithUserId:(NSString *)authUserId
                      deviceId:(NSString *)deviceId
                     deviceMac:(NSString *)deviceMac
                  deviceTypeId:(NSString *)deviceTypeId
               deviceSubtypeId:(NSString *)deviceSubtypeId
          deviceRunDataSuccess:(void(^)(HumidifierDeviceRunModel *model))runDataSuccessBlock
             deviceRunDataFail:(void(^)(NSError *error))runDataFailBlock
          deviceCfgDataSuccess:(void(^)(HumidifierDeviceConfigModel *model))cfgDataSuccessBlock
            deviceCfgDataFail:(void(^)(NSError *error))cfgDataFailBlock;


/**
 *  设备控制
 *
 *  @param model   设备控制的HumidifierDeviceConfigModel模型
 *  @param successBlock 控制成功的回调
 *  @param failureBlock 控制失败的回调
 */
- (void)deviceControlRequestWithModel:(HumidifierDeviceConfigModel *)model withSuccessBlock:(void(^)(id responseObject))successBlock withFailBlock:(void(^)( NSError *error))failureBlock;





*********************************蓝牙设备扫描，蓝牙设备绑定，蓝牙设备控制********************

********************************蓝牙设备扫描，参考CLBLEManager类*************************

/**
 *  扫描蓝牙设备
 *
 *  @param child   CLBLEDataSource对象，如果扫描设备名字CLBLEDataSource对象的broadName为空，则扫描所有设备并返回列表，如果broadName不为空则返回包含broadName蓝牙设备 ,扫描到设备会执行CLBLEManagerDelegate方法
 *  @param timeOut 扫描超时时间
 */
-(void)scanbleWithObject:(id<CLBLEDataSource>)child
         withScanTimeOut:(NSInteger)timeOut;

/**
 *  扫描到蓝牙设备的代理方法
 *
 *  @param allLGPeripherals LGPeripheral对象的数组
 */
-(void)scanAllPeripherals:(NSArray<LGPeripheral *>*)allLGPeripherals;


/**
 *  绑定设备
 *
 *  @param curPeripheral 需要绑定的蓝牙设备对象
 *  @param successBlock  绑定成功的block
 *  @param failBlock     绑定失败的block
 */

- (void)bindBleDevice:(LGPeripheral *)curPeripheral SuccessBlock:(void(^)())successBlock FailBlock:(void(^)(NSError* error))failBlock;

*******************************************蓝牙设备业务类*******************************
***********************睡眠扣子业务类（HETBLESleepButtonDevice)*************************
/**
 *  获取历史数据
 *
 *  @param broadName  蓝牙设备名字，LGPeripheral.name
 *  @param deviceId   设备唯一deviceID，后台获取的
 *  @param successBlock 获取历史数据成功的回调
 *  @param failBlock   获取历史数据失败的回调
 *  @param progressiveBlock   获取历史数据的进度，totalBytesRead当前已经获取到的数据大小，totalBytesExpected历史数据总共的数据大小
 */
-(void)fetchHistoryDatawithBLEBroadName:(NSString *)broadName withDeviceId:(NSString*)deviceId SuccessBlock:(void(^)(HETBLESleepButtonDeviceInfo *deviceInfo))successBlock
                              FailBlock:(void(^)(NSError* error))failBlock
                       ProgressiveBlock:(void (^)(NSInteger totalBytesRead, NSInteger totalBytesExpected))progressiveBlock;

*****************床垫业务类（HETBLEMattressDevice）*********************************
/**
 *  获取历史数据
 *
 *  @param broadName  蓝牙设备名字，LGPeripheral.name
 *  @param deviceId   设备唯一deviceID，后台获取的
 *  @param successBlock 获取历史数据成功的回调
 *  @param failBlock   获取历史数据失败的回调
*  @param progressiveBlock   获取历史数据的进度，totalBytesRead当前已经获取到的数据大小，totalBytesExpected历史数据总共的数据大小
 */
-(void)fetchHistoryDatawithBLEBroadName:(NSString *)broadName withDeviceId:(NSString*)deviceId SuccessBlock:(void(^)())successBlock
                              FailBlock:(void(^)(NSError* error))failBlock
                       ProgressiveBlock:(void (^)(NSInteger totalBytesRead, NSInteger totalBytesExpected))progressiveBlock;





/**
 *  获取实时数据
 *
 *  @param successBlock 实时数据返回的数据
 *  @param failBlock    获取数据失败的block
 */
-(void)fetchRealTimeDataWithSuccessBlock:(void(^)(HETBLEMattressDeviceInfo *deviceInfo))successBlock
                               FailBlock:(void(^)(NSError* error))failBlock;

****************************************************************************************




* 增加Demo，文档


 VERSION 0.1.0
--------------------------------------------------------------------------------------
* 初始版本