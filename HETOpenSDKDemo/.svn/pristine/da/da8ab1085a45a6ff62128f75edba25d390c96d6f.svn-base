//
//  HETBLEManagerApi.h
//  CLBlueToothTool
//
//  Created by Sandy wu on 15/6/8.
//  Copyright (c) 2015年 het. All rights reserved.
//

#import "CLBLEBaseApi.h"

#import "CLBLEManager.h"

@interface HETBLEManagerApi : CLBLEBaseApi<CLBLEDataSource>


@property (nonatomic,strong) LGPeripheral* currentPeripheral;//当前所连上的蓝牙对象
@property (nonatomic,strong) NSString* currentBroadName;//设备的广播名字
@property (nonatomic,assign) BOOL BLEIsPowerOn;//蓝牙是否打开
@property (nonatomic,strong) NSString* DeviceUpgradeVersion;//固件升级时候版本号，如1.9.0

/**
 *  获取历史数据
 *
 *  @param success
 *  @param fail
 */
-(void)fetchHistoryDataWithSuccessBlock:(void(^)(NSData* data))success
                          FailBlock:(void(^)(NSError* error))fail;



/**
 *  清除历史数据
 *
 *  @param success
 *  @param fail
 */
-(void)deleteHistoryDataWithSuccessBlock:(void(^)(NSData* data))success
                               FailBlock:(void(^)(NSError* error))fail;

/**
 *  获取实时数据
 *
 *  @param success
 *  @param fail
 */
-(void)fetchRealTimeDataSuccessBlock:(void(^)(NSData* data))success
                           FailBlock:(void(^)(NSError* error))fail;




/**
 *  获取实时数据（可以设置获取的时间间隔和次数）
 *
 *  @param interval 时间间隔
 *  @param times    次数
 *  @param success
 *  @param fail
 */
-(void)fetchRealTimeDataWithInterVal:(NSTimeInterval)interval
                            WithTimes:(NSTimeInterval)times
                            SuccessBlock:(void(^)(NSData* data))success
                           FailBlock:(void(^)(NSError* error))fail;


/**
 *  普通蓝牙升级前握手
 *
 *  @param success
 *  @param fail
 */
-(void)fetchBLEHandShakeSuccessBlock:(void(^)(NSData* data))success
                           FailBlock:(void(^)(NSError* error))fail;



/**
 *  获取协议版本号
 *
 *  @param success
 *  @param fail
 */

-(void)fetchProtocolVersionSuccessBlock:(void(^)(NSData* data))success
                              FailBlock:(void(^)(NSError* error))fail;


/**
 *  停止获取实时数据
 */
-(void)stopFetchRealTimeData;


/**
 *  自定义数据发送
 *
 *  @param contentData              数据内容部分
 *  @param comdNO                   协议命令字
 *  @param deviceResponsePacketData 设备回应的数据包
 *  @param appResponsePacketData    app回应的数据包
 *  @param success
 *  @param fail
 */
- (void)fetchData:(NSData *)contentData
       withComdNO:(short)comdNO
       withDeviceResponsePacketData :(NSData*)deviceResponsePacketData
       wihAppResponsePacketData:(NSData *)appResponsePacketData
       withSuccessBlock:(void(^)(NSData* data))success
        FailBlock:(void(^)(NSError* error))fail;

@end
